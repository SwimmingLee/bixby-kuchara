action (FilterMovieWithTimeAndTiOSM) {
  description (__DESCRIPTION__)
  type(Search)
  collect {
    input (timeOrderedScheduleWithMovie) {
      type (TimeOrderedScheduleWithMovie)
      min (Required) max (One)
    }
    input (dateTimeExpression) {
      type (time.DateTimeExpression)
      min (Required) max (One)
      default-init{
        intent {
          goal: MakeDateTimeExpression
        }
      }
    }
    input(isStartTime){
      type(IsStartTime)
      min (Optional) max (One)
    }
  }
  output (TimeOrderedScheduleWithMovie) {
    throws {
      error (NoDataError) {
        on-catch {
          halt {
            dialog {
              template-macro (NoDataError)
            }
          }
        }
      }
    }
  }
}